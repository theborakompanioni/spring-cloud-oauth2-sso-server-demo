
buildscript {
    ext {
        //springBootVersion = '1.5.2.RELEASE'
        // v1.5.2.RELEASE does not atm with spring-cloud Brixton.SR7
        springBootVersion = '1.4.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.STARTED, TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED
        showExceptions true
        exceptionFormat TestExceptionFormat.FULL
        showCauses true
        showStackTraces true

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

sourceSets {
    main.java.srcDir "src/main/java"
    test.java.srcDir "src/test/java"
}

test {
    // * enable on demand
    // testLogging.showStandardStreams = true
}

jar {
    baseName = 'tbk-spring-cloud-oauth2-sso-server-demo'
    version = '0.0.1-SNAPSHOT'
}

bootRepackage {
    mainClass = 'org.tbk.scoauthssodemo.Application'
}

repositories {
    mavenCentral()

    // springfox snapshots
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.SR7'
    }
}

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]

    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-devtools")

    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    compile("org.springframework.cloud:spring-cloud-starter-zuul")
    compile("org.springframework.cloud:spring-cloud-starter-oauth2")


    compile("com.google.guava:guava:19.0")
    compile("org.apache.commons:commons-lang3:3.5")
    compileOnly("org.projectlombok:lombok:1.16.14")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}
